@{
    ViewData["Title"] = "Render Chat";
}


<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<div class="container">


    <div class="inner-wrap" style="width:100%">
        <div class="card">
            <div class="card-header">
                <h2>Report of Weather Graph</h2>
            </div>
            <div id="chartMessage" style="display:none" class="card-body">
                <h4>There are no weather data. Please go to the home page to download</h4>
            </div>
        </div>
    </div>
    <div id="chartdiv"></div>


</div>

@section Scripts {

    <script>

        function LoadData(url) {
            return jQuery.ajax({
                type: "GET",
                url: url,
            });
        }

        $(document).ready(function () {

            $("#loader_bg").show();
            $("#app-loader").show();

            var url = '@Url.Action("ChatData", "Home")';

            $.when(LoadData(url)).then(function (res) {
                var data = res.data;

                if (data.length === 0) {
                    $("#chartMessage").show();
                    $("#loader_bg").hide();
                    $("#app-loader").hide();
                    return;
                }

                $("#chartMessage").hide();
                am5.ready(function () {

                    var root = am5.Root.new("chartdiv");

                    root.setThemes([
                        am5themes_Animated.new(root)
                    ]);

                    var chart = root.container.children.push(am5xy.XYChart.new(root, {
                        panX: true,
                        panY: true,
                        wheelX: "panX",
                        wheelY: "zoomX",
                        pinchZoomX: true,
                        paddingLeft: 0,
                        paddingRight: 1
                    }));

                    var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {}));
                    cursor.lineY.set("visible", false);


                    var xRenderer = am5xy.AxisRendererX.new(root, {
                        minGridDistance: 30,
                        minorGridEnabled: true
                    });

                    xRenderer.labels.template.setAll({
                        rotation: -90,
                        centerY: am5.p50,
                        centerX: am5.p100,
                        paddingRight: 15
                    });

                    xRenderer.grid.template.setAll({
                        location: 1
                    })

                    var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
                        maxDeviation: 0.3,
                        categoryField: "date",
                        renderer: xRenderer,
                        tooltip: am5.Tooltip.new(root, {})
                    }));

                    var yRenderer = am5xy.AxisRendererY.new(root, {
                        strokeOpacity: 0.1
                    })

                    var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
                        maxDeviation: 0.3,
                        renderer: yRenderer
                    }));

                    // Create series
                    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
                    var series = chart.series.push(am5xy.ColumnSeries.new(root, {
                        name: "Series 1",
                        xAxis: xAxis,
                        yAxis: yAxis,
                        valueYField: "value",
                        sequencedInterpolation: true,
                        categoryXField: "date",
                        tooltip: am5.Tooltip.new(root, {
                            labelText: "{valueY}"
                        })
                    }));

                    series.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5, strokeOpacity: 0 });
                    series.columns.template.adapters.add("fill", function (fill, target) {
                        return chart.get("colors").getIndex(series.columns.indexOf(target));
                    });

                    series.columns.template.adapters.add("stroke", function (stroke, target) {
                        return chart.get("colors").getIndex(series.columns.indexOf(target));
                    });


                    xAxis.data.setAll(data);
                    series.data.setAll(data);


                    series.appear(1000);
                    chart.appear(1000, 100);
                    $("#loader_bg").hide();
                    $("#app-loader").hide();

                });
            }).fail(function () {
                $("#loader_bg").hide();
                $("#app-loader").hide();
            })


        })
    </script>

}
